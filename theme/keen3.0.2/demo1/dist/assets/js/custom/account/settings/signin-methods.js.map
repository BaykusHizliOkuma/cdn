{"version":3,"file":"js/custom/account/settings/signin-methods.js","mappings":"mBAGA,IACQA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAMAC,EAjBJC,GAWIF,EAAoB,WACpBR,EAAaW,UAAUC,OAAO,UAC9BR,EAAkBO,UAAUC,OAAO,UACnCX,EAAaU,UAAUC,OAAO,SAClC,EAEIH,EAAuB,WACvBP,EAAeS,UAAUC,OAAO,UAChCN,EAAeK,UAAUC,OAAO,UAChCT,EAAeQ,UAAUC,OAAO,SACpC,EA6LO,CACHC,KAAM,WApKc,IAChBC,EAoKAf,EAAagB,SAASC,eAAe,0BACrChB,EAAee,SAASC,eAAe,mBACvCf,EAAec,SAASC,eAAe,wBACvCd,EAAiBa,SAASC,eAAe,sBACzCb,EAAiBY,SAASC,eAAe,2BACzCZ,EAAoBW,SAASC,eAAe,0BAC5CX,EAAoBU,SAASC,eAAe,oBAC5CV,EAAiBS,SAASC,eAAe,6BACzCT,EAAiBQ,SAASC,eAAe,sBAnMxChB,IAKLI,EAAkBa,cAAc,UAAUC,iBAAiB,SAAS,WAChEV,GACJ,IAEAH,EAAkBa,iBAAiB,SAAS,WACxCV,GACJ,IAEAF,EAAeW,cAAc,UAAUC,iBAAiB,SAAS,WAC7DT,GACJ,IAEAF,EAAeW,iBAAiB,SAAS,WACrCT,GACJ,KAMKV,IAILe,EAAaK,eAAeC,eACxBrB,EACA,CACIsB,OAAQ,CACJC,aAAc,CACVC,WAAY,CACRC,SAAU,CACNC,QAAS,qBAEbC,aAAc,CACVD,QAAS,4CAKrBE,qBAAsB,CAClBJ,WAAY,CACRC,SAAU,CACNC,QAAS,2BAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCC,UAAW,IAAIZ,eAAeS,QAAQI,WAAW,CAC7CC,YAAa,eAM7BlC,EAAWkB,cAAc,qBAAqBC,iBAAiB,SAAS,SAAUgB,GAC9EA,EAAEC,iBACFC,QAAQC,IAAI,SAEZvB,EAAWwB,WAAWC,MAAK,SAAUC,GACnB,SAAVA,EACAC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,4CAEpBT,MAAK,WACJxC,EAAWkD,QACXnC,EAAWoC,YACX1C,GACJ,IAEAiC,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,2CAI/B,GACJ,KAGuB,SAAUd,GACjC,IAAIpB,EAGAqC,EAAepC,SAASC,eAAe,6BAEtCmC,IAILrC,EAAaK,eAAeC,eACxB+B,EACA,CACI9B,OAAQ,CACJ+B,gBAAiB,CACb7B,WAAY,CACRC,SAAU,CACNC,QAAS,kCAKrB4B,YAAa,CACT9B,WAAY,CACRC,SAAU,CACNC,QAAS,8BAKrB6B,gBAAiB,CACb/B,WAAY,CACRC,SAAU,CACNC,QAAS,gCAEb8B,UAAW,CACPC,QAAS,WACL,OAAOL,EAAalC,cAAc,wBAAwBwC,KAC9D,EACAhC,QAAS,oDAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCC,UAAW,IAAIZ,eAAeS,QAAQI,WAAW,CAC7CC,YAAa,eAM7BkB,EAAalC,cAAc,uBAAuBC,iBAAiB,SAAS,SAAUgB,GAClFA,EAAEC,iBACFC,QAAQC,IAAI,SAEZvB,EAAWwB,WAAWC,MAAK,SAAUC,GACnB,SAAVA,EACAC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,4CAEpBT,MAAK,WACJY,EAAaF,QACbnC,EAAWoC,YACXzC,GACJ,IAEAgC,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,2CAI/B,GACJ,IACJ,CAiBQU,EACJ,IAKRC,OAAOC,oBAAmB,WACtBlD,EAA+BG,MACnC,G","sources":["webpack://keen/../demo1/src/js/custom/account/settings/signin-methods.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTAccountSettingsSigninMethods = function () {\n    var signInForm;\n    var signInMainEl;\n    var signInEditEl;\n    var passwordMainEl;\n    var passwordEditEl;\n    var signInChangeEmail;\n    var signInCancelEmail;\n    var passwordChange;\n    var passwordCancel;\n\n    var toggleChangeEmail = function () {\n        signInMainEl.classList.toggle('d-none');\n        signInChangeEmail.classList.toggle('d-none');\n        signInEditEl.classList.toggle('d-none');\n    }\n\n    var toggleChangePassword = function () {\n        passwordMainEl.classList.toggle('d-none');\n        passwordChange.classList.toggle('d-none');\n        passwordEditEl.classList.toggle('d-none');\n    }\n\n    // Private functions\n    var initSettings = function () {  \n        if (!signInMainEl) {\n            return;\n        }        \n\n        // toggle UI\n        signInChangeEmail.querySelector('button').addEventListener('click', function () {\n            toggleChangeEmail();\n        });\n\n        signInCancelEmail.addEventListener('click', function () {\n            toggleChangeEmail();\n        });\n\n        passwordChange.querySelector('button').addEventListener('click', function () {\n            toggleChangePassword();\n        });\n\n        passwordCancel.addEventListener('click', function () {\n            toggleChangePassword();\n        });\n    }\n\n    var handleChangeEmail = function (e) {\n        var validation;        \n\n        if (!signInForm) {\n            return;\n        }\n\n        validation = FormValidation.formValidation(\n            signInForm,\n            {\n                fields: {\n                    emailaddress: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Email is required'\n                            },\n                            emailAddress: {\n                                message: 'The value is not a valid email address'\n                            }\n                        }\n                    },\n\n                    confirmemailpassword: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Password is required'\n                            }\n                        }\n                    }\n                },\n\n                plugins: { //Learn more: https://formvalidation.io/guide/plugins\n                    trigger: new FormValidation.plugins.Trigger(),\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row'\n                    })\n                }\n            }\n        );\n\n        signInForm.querySelector('#kt_signin_submit').addEventListener('click', function (e) {\n            e.preventDefault();\n            console.log('click');\n\n            validation.validate().then(function (status) {\n                if (status == 'Valid') {\n                    swal.fire({\n                        text: \"Sent password reset. Please check your email\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\n                        }\n                    }).then(function(){\n                        signInForm.reset();\n                        validation.resetForm(); // Reset formvalidation --- more info: https://formvalidation.io/guide/api/reset-form/\n                        toggleChangeEmail();\n                    });\n                } else {\n                    swal.fire({\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    var handleChangePassword = function (e) {\n        var validation;\n\n        // form elements\n        var passwordForm = document.getElementById('kt_signin_change_password');\n\n        if (!passwordForm) {\n            return;\n        }\n\n        validation = FormValidation.formValidation(\n            passwordForm,\n            {\n                fields: {\n                    currentpassword: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Current Password is required'\n                            }\n                        }\n                    },\n\n                    newpassword: {\n                        validators: {\n                            notEmpty: {\n                                message: 'New Password is required'\n                            }\n                        }\n                    },\n\n                    confirmpassword: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Confirm Password is required'\n                            },\n                            identical: {\n                                compare: function() {\n                                    return passwordForm.querySelector('[name=\"newpassword\"]').value;\n                                },\n                                message: 'The password and its confirm are not the same'\n                            }\n                        }\n                    },\n                },\n\n                plugins: { //Learn more: https://formvalidation.io/guide/plugins\n                    trigger: new FormValidation.plugins.Trigger(),\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row'\n                    })\n                }\n            }\n        );\n\n        passwordForm.querySelector('#kt_password_submit').addEventListener('click', function (e) {\n            e.preventDefault();\n            console.log('click');\n\n            validation.validate().then(function (status) {\n                if (status == 'Valid') {\n                    swal.fire({\n                        text: \"Sent password reset. Please check your email\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\n                        }\n                    }).then(function(){\n                        passwordForm.reset();\n                        validation.resetForm(); // Reset formvalidation --- more info: https://formvalidation.io/guide/api/reset-form/\n                        toggleChangePassword();\n                    });\n                } else {\n                    swal.fire({\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            signInForm = document.getElementById('kt_signin_change_email');\n            signInMainEl = document.getElementById('kt_signin_email');\n            signInEditEl = document.getElementById('kt_signin_email_edit');\n            passwordMainEl = document.getElementById('kt_signin_password');\n            passwordEditEl = document.getElementById('kt_signin_password_edit');\n            signInChangeEmail = document.getElementById('kt_signin_email_button');\n            signInCancelEmail = document.getElementById('kt_signin_cancel');\n            passwordChange = document.getElementById('kt_signin_password_button');\n            passwordCancel = document.getElementById('kt_password_cancel');\n\n            initSettings();\n            handleChangeEmail();\n            handleChangePassword();\n        }\n    }\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTAccountSettingsSigninMethods.init();\n});\n"],"names":["signInForm","signInMainEl","signInEditEl","passwordMainEl","passwordEditEl","signInChangeEmail","signInCancelEmail","passwordChange","passwordCancel","toggleChangeEmail","toggleChangePassword","KTAccountSettingsSigninMethods","classList","toggle","init","validation","document","getElementById","querySelector","addEventListener","FormValidation","formValidation","fields","emailaddress","validators","notEmpty","message","emailAddress","confirmemailpassword","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","e","preventDefault","console","log","validate","then","status","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","reset","resetForm","passwordForm","currentpassword","newpassword","confirmpassword","identical","compare","value","handleChangePassword","KTUtil","onDOMContentLoaded"],"sourceRoot":""}