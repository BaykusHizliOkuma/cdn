{"version":3,"file":"js/custom/apps/customers/update.js","mappings":"mBAGA,IACQA,EACAC,EACAC,EACAC,EACAC,EACAC,EANJC,EA2GO,CAEHC,KAAM,WAEFP,EAAUQ,SAASC,cAAc,6BACjCJ,EAAQ,IAAIK,UAAUC,MAAMX,GAE5BI,EAAOJ,EAAQS,cAAc,kCAC7BR,EAAeG,EAAKK,cAAc,oCAClCP,EAAeE,EAAKK,cAAc,oCAClCN,EAAcH,EAAQS,cAAc,mCA1GxCR,EAAaW,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEC,iBAGFb,EAAac,aAAa,oBAAqB,MAG/CC,YAAW,WAEPf,EAAagB,gBAAgB,qBAG7BC,KAAKC,KAAK,CACNC,KAAM,wCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBC,MAAK,SAAUC,GACVA,EAAOC,aACPvB,EAAMwB,MAEd,GAGJ,GAAG,IACP,IAEA3B,EAAaU,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEFI,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNS,kBAAkB,EAClBR,gBAAgB,EAChBC,kBAAmB,kBACnBQ,iBAAkB,aAClBP,YAAa,CACTC,cAAe,kBACfvB,aAAc,0BAEnBwB,MAAK,SAAUC,GACVA,EAAOK,OACP5B,EAAK6B,QACL5B,EAAMwB,QACoB,WAAnBF,EAAOO,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAEAtB,EAAYS,iBAAiB,SAAS,SAAUC,GAC5CA,EAAEC,iBAEFI,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNS,kBAAkB,EAClBR,gBAAgB,EAChBC,kBAAmB,kBACnBQ,iBAAkB,aAClBP,YAAa,CACTC,cAAe,kBACfvB,aAAc,0BAEnBwB,MAAK,SAAUC,GACVA,EAAOK,OACP5B,EAAK6B,QACL5B,EAAMwB,QACoB,WAAnBF,EAAOO,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,GAgBA,GAKRU,OAAOC,oBAAmB,WACtB9B,EAAsBC,MAC1B,G","sources":["webpack://keen/../demo1/src/js/custom/apps/customers/update.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTModalUpdateCustomer = function () {\n    var element;\n    var submitButton;\n    var cancelButton;\n    var closeButton;\n    var form;\n    var modal;\n\n    // Init form inputs\n    var initForm = function () {\n        // Action buttons\n        submitButton.addEventListener('click', function (e) {\n            // Prevent default button action\n            e.preventDefault();\n\n            // Show loading indication\n            submitButton.setAttribute('data-kt-indicator', 'on');\n\n            // Simulate form submission\n            setTimeout(function () {\n                // Simulate form submission\n                submitButton.removeAttribute('data-kt-indicator');\n\n                // Show popup confirmation \n                Swal.fire({\n                    text: \"Form has been successfully submitted!\",\n                    icon: \"success\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Ok, got it!\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\"\n                    }\n                }).then(function (result) {\n                    if (result.isConfirmed) {\n                        modal.hide();\n                    }\n                });\n\n                //form.submit(); // Submit form\n            }, 2000);\n        });\n\n        cancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n\n        closeButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Are you sure you would like to cancel?\",\n                icon: \"warning\",\n                showCancelButton: true,\n                buttonsStyling: false,\n                confirmButtonText: \"Yes, cancel it!\",\n                cancelButtonText: \"No, return\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: \"btn btn-active-light\"\n                }\n            }).then(function (result) {\n                if (result.value) {\n                    form.reset(); // Reset form\t\n                    modal.hide(); // Hide modal\t\t\t\t\n                } else if (result.dismiss === 'cancel') {\n                    Swal.fire({\n                        text: \"Your form has not been cancelled!.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn btn-primary\",\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    return {\n        // Public functions\n        init: function () {\n            // Elements\n            element = document.querySelector('#kt_modal_update_customer');\n            modal = new bootstrap.Modal(element);\n\n            form = element.querySelector('#kt_modal_update_customer_form');\n            submitButton = form.querySelector('#kt_modal_update_customer_submit');\n            cancelButton = form.querySelector('#kt_modal_update_customer_cancel');\n            closeButton = element.querySelector('#kt_modal_update_customer_close');\n\n            initForm();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTModalUpdateCustomer.init();\n});"],"names":["element","submitButton","cancelButton","closeButton","form","modal","KTModalUpdateCustomer","init","document","querySelector","bootstrap","Modal","addEventListener","e","preventDefault","setAttribute","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","then","result","isConfirmed","hide","showCancelButton","cancelButtonText","value","reset","dismiss","KTUtil","onDOMContentLoaded"],"sourceRoot":""}