{"version":3,"file":"js/custom/pages/general/contact.js","mappings":"mBAGA,IACKA,EACAC,EACAC,EACAC,EAJDC,EAyLI,CAENC,KAAM,WAELH,EAAOI,SAASC,cAAc,oBAC9BP,EAAeM,SAASE,eAAe,4BAlHlCC,EAAEP,EAAKK,cAAc,sBAAsBG,GAAG,UAAU,WAEpDT,EAAUU,gBAAgB,WAC9B,IAQNV,EAAYW,eAAeC,eAC1BX,EACA,CACCY,OAAQ,CACP,KAAQ,CACPC,WAAY,CACXC,SAAU,CACTC,QAAS,sBAIZ,MAAS,CACUF,WAAY,CAC7BC,SAAU,CACTC,QAAS,6BAEWC,aAAc,CAClCD,QAAS,4CAIZ,QAAW,CACQF,WAAY,CAC7BC,SAAU,CACTC,QAAS,0BAKbE,QAAS,CACRC,QAAS,IAAIR,eAAeO,QAAQE,QACpCC,UAAW,IAAIV,eAAeO,QAAQI,WAAW,CAChDC,YAAa,UACKC,gBAAiB,GACjBC,cAAe,QAOrC1B,EAAa2B,iBAAiB,SAAS,SAAUC,GAChDA,EAAEC,iBAGE5B,GACHA,EAAU6B,WAAWC,MAAK,SAAUC,GACnCC,QAAQC,IAAI,cAEE,SAAVF,GACHhC,EAAamC,aAAa,oBAAqB,MAG/CnC,EAAaoC,UAAW,EAExBC,YAAW,WACVrC,EAAasC,gBAAgB,qBAG7BtC,EAAaoC,UAAW,EAExBG,KAAKC,KAAK,CACTC,KAAM,wCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,qBAEdf,MAAK,SAAUgB,GACbA,EAAOC,WAGZ,GAGD,GAAG,MAKHT,KAAKC,KAAK,CACTC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACZC,cAAe,qBAEdf,MAAK,SAAUgB,GACjBE,OAAOC,WACR,GAEF,GAEF,IA/KgB,SAASC,GAEnB,GAAKC,EAAL,CAKA,IAWIC,EAXAC,EAAUF,EAAEG,IAAIJ,EAAW,CAC3BK,OAAQ,CAAC,QAAS,QAClBC,KAAM,KAIVL,EAAEM,UAAU,qDAAsD,CAC9DC,YAAa,8EACdC,MAAMN,GAKLD,OAD4B,IAArBD,EAAES,KAAKC,UACGV,EAAES,KAAKR,iBAEPD,EAAES,KAAKC,UAAUT,iBAItC,IAAIU,EAAcX,EAAEY,aAAaJ,MAAMN,GAGnCW,EAAcb,EAAEc,QAAQ,CACxBC,KAAM,yuBACNC,MAAO,CAAC,GAAI,IACZC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,UAAW,mBAIrBnB,EAAEoB,OAAO,CAAC,WAAY,WAAY,CAAE9B,KAAMuB,IAAeL,MAAMG,GAAaU,UAAU,iCAAkC,CAAEC,aAAa,IAASC,YAG1IrB,EAAQ5C,GAAG,SAAS,SAAUkB,GAC1ByB,EAAeuB,UAAUC,OAAOjD,EAAEiD,QAAQC,KAAI,SAAUC,EAAOhC,GACvDgC,IAGJhB,EAAYiB,cACZ7E,EAAmB4C,EAAOkC,QAAQC,WAClC9B,EAAEoB,OAAOzB,EAAO8B,OAAQ,CAAEnC,KAAMuB,IAAeL,MAAMG,GAAaU,UAAU1B,EAAOkC,QAAQC,WAAY,CAAER,aAAa,IAASC,YAG/HpC,KAAKC,KAAK,CACN2B,KAAM,uBAAyBhE,EAAmB,MAAQ4C,EAAO8B,OAAS,SAC1EnC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBf,MAAK,SAAUgB,GAElB,IACJ,GACJ,GA3DA,CA4DJ,CA2HDoC,CAAQ,iBACT,GAKFlC,OAAOmC,oBAAmB,WACzBhF,EAAeC,MAChB,G","sources":["webpack://keen/../demo1/src/js/custom/pages/general/contact.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTContactApply = function () {\n\tvar submitButton;\n\tvar validator;\n\tvar form;\n\tvar selectedlocation;\n\n\t// Private functions\n    var initMap = function(elementId) {\n        // Check if Leaflet is included\n        if (!L) {\n            return;\n        }\n\n        // Define Map Location\n        var leaflet = L.map(elementId, {\n            center: [40.725, -73.985],\n            zoom: 30\n        });\n\n        // Init Leaflet Map. For more info check the plugin's documentation: https://leafletjs.com/\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(leaflet);\n\n        // Set Geocoding\n        var geocodeService;\n        if (typeof L.esri.Geocoding === 'undefined') {\n            geocodeService = L.esri.geocodeService();\n        } else {\n            geocodeService = L.esri.Geocoding.geocodeService();\n        }\n\n        // Define Marker Layer\n        var markerLayer = L.layerGroup().addTo(leaflet);\n\n        // Set Custom SVG icon marker\n        var leafletIcon = L.divIcon({\n            html: `<span class=\"svg-icon svg-icon-primary shadow svg-icon-3x\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\"><g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect x=\"0\" y=\"24\" width=\"24\" height=\"0\"/><path d=\"M5,10.5 C5,6 8,3 12.5,3 C17,3 20,6.75 20,10.5 C20,12.8325623 17.8236613,16.03566 13.470984,20.1092932 C12.9154018,20.6292577 12.0585054,20.6508331 11.4774555,20.1594925 C7.15915182,16.5078313 5,13.2880005 5,10.5 Z M12.5,12 C13.8807119,12 15,10.8807119 15,9.5 C15,8.11928813 13.8807119,7 12.5,7 C11.1192881,7 10,8.11928813 10,9.5 C10,10.8807119 11.1192881,12 12.5,12 Z\" fill=\"#000000\" fill-rule=\"nonzero\"/></g></svg></span>`,\n            bgPos: [10, 10],\n            iconAnchor: [20, 37],\n            popupAnchor: [0, -37],\n            className: 'leaflet-marker'\n        });\n\n\t\t// Show current address\n\t\tL.marker([40.724716, -73.984789], { icon: leafletIcon }).addTo(markerLayer).bindPopup('430 E 6th St, New York, 10009.', { closeButton: false }).openPopup();\n\n        // Map onClick Action\n        leaflet.on('click', function (e) {\n            geocodeService.reverse().latlng(e.latlng).run(function (error, result) {\n                if (error) {\n                    return;\n                }\n                markerLayer.clearLayers();\n                selectedlocation = result.address.Match_addr;\n                L.marker(result.latlng, { icon: leafletIcon }).addTo(markerLayer).bindPopup(result.address.Match_addr, { closeButton: false }).openPopup();\n\n                // Show popup confirmation. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                Swal.fire({\n                    html: 'Your selected - <b>\"' + selectedlocation + ' - ' + result.latlng + '\"</b>.',\n                    icon: \"success\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Ok, got it!\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\"\n                    }\n                }).then(function (result) {\n                    // Confirmed\n                });\n            });\n        });\n    }\n\n\t// Init form inputs\n\tvar initForm = function() {\n\t\t// Team assign. For more info, plase visit the official plugin site: https://select2.org/\n        $(form.querySelector('[name=\"position\"]')).on('change', function() {\n            // Revalidate the field when an option is chosen\n            validator.revalidateField('position');\n        });\t\t\n\t}\n\n\t// Handle form validation and submittion\n\tvar handleForm = function() {\n\t\t// Stepper custom navigation\n\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tvalidator = FormValidation.formValidation(\n\t\t\tform,\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Name is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'email': {\n                        validators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\n\t\t\t\t\t\t\t},\n                            emailAddress: {\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'message': {\n                        validators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Message is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t \n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Action buttons\n\t\tsubmitButton.addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (validator) {\n\t\t\t\tvalidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable button to avoid multiple click \n\t\t\t\t\t\tsubmitButton.disabled = true;\n\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\n\n\t\t\t\t\t\t\t// Enable button\n\t\t\t\t\t\t\tsubmitButton.disabled = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\t//form.submit();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//form.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Scroll top\n\n\t\t\t\t\t\t// Show error popuo. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\tKTUtil.scrollTop();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\t// Public functions\n\t\tinit: function () {\n\t\t\t// Elements\n\t\t\tform = document.querySelector('#kt_contact_form');\n\t\t\tsubmitButton = document.getElementById('kt_contact_submit_button');\n\n\t\t\tinitForm();\n\t\t\thandleForm();\n\t\t\tinitMap('kt_contact_map');\n\t\t}\n\t};\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n\tKTContactApply.init();\n});"],"names":["submitButton","validator","form","selectedlocation","KTContactApply","init","document","querySelector","getElementById","$","on","revalidateField","FormValidation","formValidation","fields","validators","notEmpty","message","emailAddress","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","addEventListener","e","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","KTUtil","scrollTop","elementId","L","geocodeService","leaflet","map","center","zoom","tileLayer","attribution","addTo","esri","Geocoding","markerLayer","layerGroup","leafletIcon","divIcon","html","bgPos","iconAnchor","popupAnchor","className","marker","bindPopup","closeButton","openPopup","reverse","latlng","run","error","clearLayers","address","Match_addr","initMap","onDOMContentLoaded"],"sourceRoot":""}